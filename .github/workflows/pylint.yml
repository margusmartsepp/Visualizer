name: CI Pipeline

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pylint pytest
    - name: Analyse the code with pylint
      id: pylint
      run: |
        $lint_score = $(pylint $(git ls-files '*.py') | Select-String "Your code has been rated at" | ForEach-Object { $_.Line -replace '.+ rated at ', '' -replace '/10.+', '' })
        $lint_score_value = [double]$lint_score
        if ($lint_score_value -ge 8) {
          $color = 'brightgreen'
        } elseif ($lint_score_value -ge 6) {
          $color = 'yellow'
        } else {
          $color = 'red'
        }
        $badge = "[![Linter](https://img.shields.io/badge/Linter-$lint_score-$color)](https://github.com/margusmartsepp/Visualizer/actions)"
        Set-Content -Path 'linter-badge.md' -Value $badge

    - name: Run tests
      id: pytest
      run: |
        pytest --maxfail=1 --disable-warnings > pytest_results.txt
        $test_results = Get-Content pytest_results.txt | Select-String -Pattern "^=+ (\d+) passed"
        $test_results_value = $test_results -replace '.+ (\d+) passed.+', '$1'
        if ($test_results_value -gt 0) {
          $color = 'brightgreen'
        } else {
          $color = 'red'
        }
        $badge = "[![Tests](https://img.shields.io/badge/Tests-$test_results_value%20passed-$color)](https://github.com/margusmartsepp/Visualizer/actions)"
        Set-Content -Path 'test-badge.md' -Value $badge

    - name: Commit badges
      run: |
        git config --local user.email "github-actions[bot]@users.noreply.github.com"
        git config --local user.name "github-actions[bot]"
        git add linter-badge.md test-badge.md
        git commit -m "Update badges"
        git push
